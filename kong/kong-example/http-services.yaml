---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: http-svc
  annotations:
    prometheus.io/scrape: "true" # Ask Prometheus to scrape the
    prometheus.io/port: "8100"   # Kong pods for metrics
  labels:
    enable-metrics: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: http-svc
  template:
    metadata:
      labels:
        app: http-svc
    spec:
      containers:
        - name: http-svc
          image: docker.io/kennethreitz/httpbin
          ports:
            - containerPort: 80
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/billing"
  name: billing
  labels:
    enable-metrics: "true"
    app: billing
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app: http-svc
---
apiVersion: v1
kind: Service
metadata:
  # annotations:
  #   prometheus.io/scrape: "true"
  #   prometheus.io/path: "/invoice"
  name: invoice
  labels:
    app: invoice
    enable-metrics: "true"
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app: http-svc
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/comments"
  name: comments
  labels:
    app: comments
    enable-metrics: "true"
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app: http-svc
